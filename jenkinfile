pipeline {
    agent any

    environment {
        DOCKER_IMAGE = 'your-dockerhub-username/java-project-maven-new' // Change as needed
        DOCKER_TAG = 'latest'
    }

    stages {
        stage('Clone Repository') {
            steps {
                git 'https://github.com/prakash-128/java-project-maven-new.git'
            }
        }

        stage('Build WAR with Maven') {
            steps {
                sh 'mvn clean package -DskipTests'
            }
        }

        stage('Build Docker Image') {
            steps {
                script {
                    sh 'docker build -t $DOCKER_IMAGE:$DOCKER_TAG .'
                }
            }
        }

        stage('Push Docker Image (Optional)') {
            when {
                expression { return env.DOCKER_USERNAME != null }
            }
            steps {
                withCredentials([usernamePassword(credentialsId: 'dockerhub-creds', usernameVariable: 'DOCKER_USERNAME', passwordVariable: 'DOCKER_PASSWORD')]) {
                    sh '''
                        echo "$DOCKER_PASSWORD" | docker login -u "$DOCKER_USERNAME" --password-stdin
                        docker push $DOCKER_IMAGE:$DOCKER_TAG
                    '''
                }
            }
        }

        stage('Run Container (Optional)') {
            steps {
                sh '''
                    docker stop java-app || true
                    docker rm java-app || true
                    docker run -d -p 8080:8080 --name java-app $DOCKER_IMAGE:$DOCKER_TAG
                '''
            }
        }
    }

